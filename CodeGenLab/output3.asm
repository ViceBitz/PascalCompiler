	#This code was auto-generated by a handwritten compiler from scratch, with the source file in Pascal
	#@author Victor Gong
	#@version 2024/01/08 12:54:37
	
	.text
	.globl main

main:
	#Block
	#Number
	li $v0 196
	sw $v0 varcount
	#Number
	li $v0 0
	sw $v0 vartimes
	#Procedure Call: printSquares
	#Push parameters
	#Number
	li $v0 10
	subu $sp $sp 4
	sw $v0 ($sp)
	#Number
	li $v0 13
	subu $sp $sp 4
	sw $v0 ($sp)
	jal printSquares
	lw $t0 ($sp)
	addu $sp $sp 4
	lw $t0 ($sp)
	addu $sp $sp 4
	sw $v0 varignore
	#Writeln
	#Variable: count
	la $t0 varcount
	lw $v0 ($t0)
	move $a0 $v0
	li $v0 1
	syscall
	la $a0 newline
	li $v0 4
	syscall
	#Writeln
	#Variable: times
	la $t0 vartimes
	lw $v0 ($t0)
	move $a0 $v0
	li $v0 1
	syscall
	la $a0 newline
	li $v0 4
	syscall
	li $v0 10
	syscall
	#Procedure: printSquares
printSquares:
	#Push return value
	li $v0 0
	subu $sp $sp 4
	sw $v0 ($sp)
	#Push $ra
	subu $sp $sp 4
	sw $ra ($sp)
	#Push local variables
	subu $sp $sp 4
	sw $v0 ($sp)
	subu $sp $sp 4
	sw $v0 ($sp)
	#Block
	#Local Variable: low
	lw $v0 20($sp)
	sw $v0 4($sp)
	#While
while1:
	#Local Variable: count
	lw $v0 4($sp)
	subu $sp $sp 4
	sw $v0 ($sp)
	#Local Variable: high
	lw $v0 20($sp)
	lw $t0 ($sp)
	addu $sp $sp 4
	#Condition: <=
	bgt $t0 $v0 endWhile1
	#Block
	#Local Variable: count
	lw $v0 4($sp)
	subu $sp $sp 4
	sw $v0 ($sp)
	#Local Variable: count
	lw $v0 8($sp)
	lw $t0 ($sp)
	addu $sp $sp 4
	#BinOp: Mul
	mul $v0 $t0 $v0
	sw $v0 0($sp)
	#Writeln
	#Local Variable: square
	lw $v0 0($sp)
	move $a0 $v0
	li $v0 1
	syscall
	la $a0 newline
	li $v0 4
	syscall
	#Local Variable: count
	lw $v0 4($sp)
	subu $sp $sp 4
	sw $v0 ($sp)
	#Number
	li $v0 1
	lw $t0 ($sp)
	addu $sp $sp 4
	#BinOp: Add
	addu $v0 $t0 $v0
	sw $v0 4($sp)
	#Variable: times
	la $t0 vartimes
	lw $v0 ($t0)
	subu $sp $sp 4
	sw $v0 ($sp)
	#Number
	li $v0 1
	lw $t0 ($sp)
	addu $sp $sp 4
	#BinOp: Add
	addu $v0 $t0 $v0
	sw $v0 vartimes
	j while1
endWhile1:
	lw $t0 ($sp)
	addu $sp $sp 4
	lw $t0 ($sp)
	addu $sp $sp 4
	lw $ra ($sp)
	addu $sp $sp 4
	lw $v0 ($sp)
	addu $sp $sp 4
	jr $ra
	
.data
	newline: .asciiz "\n"
	varcount: .word	0
	varignore: .word	0
	vartimes: .word	0

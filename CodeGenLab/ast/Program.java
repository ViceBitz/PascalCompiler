package ast;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

import environment.Environment;
import scanner.ScanErrorException;
import emitter2.Emitter;

/**
 * Program represents the entire code, consisting of ProcedureDeclarations followed by a main statement.
 * The list of ProcedureDeclarations with the main statement are stored in respective instance variables.
 * Upon execution, the program executes all of the procedure declarations and then the main statement.
 * 
 * @author Victor Gong
 * @version 10/24/2023
 *
 */

public class Program {
    List<String> globalVars;
    List<ProcedureDeclaration> procedures;
    Statement mainStmt;

    public Program(List<String> globalVars, List<ProcedureDeclaration> procedures, Statement mainStmt)
    {
        this.globalVars = globalVars;
        this.procedures = procedures;
        this.mainStmt = mainStmt;
    }
    /**
     * Executes this program by executing the procedure statements and then subsequently the main statement
     * @param env The current environment
     * @throws ScanErrorException
     */
    public void exec(Environment env) throws ScanErrorException
    {
        for (ProcedureDeclaration p: procedures)
        {
            p.exec(env);
        }
        mainStmt.exec(env);
    }

    /**
     * Compiles this program into MIPS Assembly by first emitting the header (.text, .globl main), then
     * compiling procedures, emitting the main label, calling the compile method of the main statement,
     * emitting the .data with variables + new line and then emitting the sysexit code
     * 
     * @param e The current emitter
     */
    public void compile(Emitter e)
    {
        //Header
        e.emit("#This code was auto-generated by a handwritten compiler from scratch, with the source file in Pascal");
        e.emit("#@author Victor Gong");
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
        LocalDateTime now = LocalDateTime.now();
        e.emit("#@version " + dtf.format(now));
        e.emit("");

        e.emit(".text");
        e.emit(".globl main\n");
        
        e.emit("main:");
        mainStmt.compile(e);
        e.emit("li $v0 10");
        e.emit("syscall");

        for (ProcedureDeclaration prod: procedures)
        {
            prod.compile(e);
        }

        e.emit("\n.data");
        e.emit("newline: .asciiz \"\\n\"");
        for (String id: globalVars)
        {
            e.emit("var" + id + ": .word\t0");
        }
    }
}
